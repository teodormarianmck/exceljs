{"version":3,"sources":["../../../../lib/stream/xlsx/worksheet-writer.js"],"names":["_","require","RelType","colCache","Encryptor","Dimensions","StringBuf","Row","Column","SheetRelsWriter","SheetCommentsWriter","DataValidations","xmlBuffer","ListXform","DataValidationsXform","SheetPropertiesXform","SheetFormatPropertiesXform","ColXform","RowXform","HyperlinkXform","SheetViewXform","SheetProtectionXform","PageMarginsXform","PageSetupXform","AutoFilterXform","PictureXform","ConditionalFormattingsXform","HeaderFooterXform","RowBreaksXform","xform","dataValidations","sheetProperties","sheetFormatProperties","columns","tag","length","childXform","row","hyperlinks","sheetViews","sheetProtection","pageMargins","pageSeteup","autoFilter","picture","conditionalFormattings","headerFooter","rowBreaks","WorksheetWriter","options","id","name","state","_rows","_columns","_keys","_merges","add","_sheetRelsWriter","_sheetCommentsWriter","_dimensions","_rowZero","committed","_formulae","_siFormulae","conditionalFormatting","properties","Object","assign","defaultRowHeight","dyDescent","outlineLevelCol","outlineLevelRow","differentFirst","differentOddEven","oddHeader","oddFooter","evenHeader","evenFooter","firstHeader","firstFooter","pageSetup","margins","left","right","top","bottom","header","footer","orientation","horizontalDpi","verticalDpi","fitToPage","fitToWidth","fitToHeight","scale","pageOrder","blackAndWhite","draft","cellComments","errors","paperSize","undefined","showRowColHeaders","showGridLines","horizontalCentered","verticalCentered","colBreaks","useSharedStrings","_workbook","workbook","hasComments","_views","views","_media","_writeOpenWorksheet","startedData","Error","forEach","cRow","_writeRow","_writeOpenSheetData","_writeCloseSheetData","_writeAutoFilter","_writeMergeCells","_writeHyperlinks","_writeConditionalFormatting","_writeDataValidations","_writeSheetProtection","_writePageMargins","_writePageSetup","_writeBackground","_writeHeaderFooter","_writeRowBreaks","_writeLegacyData","_writeCloseWorksheet","stream","end","commit","key","value","f","each","c","col","l2n","n","push","iteratee","includeEmpty","_nextRow","i","getRow","hasValues","number","found","shift","rowNumber","index","values","r","address","getAddress","findRow","findCell","column","getCellEx","cells","dimensions","merge","intersects","master","getCell","j","cf","filter","splice","Function","imageId","_background","password","Promise","resolve","sheet","spinCount","isFinite","Math","round","max","algorithmName","saltValue","randomBytes","toString","hashValue","convertPasswordToHash","text","reset","addText","write","xmlBuf","sheetPropertiesModel","outlineProperties","tabColor","toXml","sheetFormatPropertiesModel","defaultColWidth","_writeSheetProperties","_writeSheetFormatProperties","cols","toModel","prepare","styles","_write","_writeColumns","height","model","sharedStrings","hyperlinksProxy","merges","formulae","siFormulae","comments","addComments","_hyperlinks","image","getImage","pictureId","addMedia","Target","Type","Image","rId","vmlRelId","_stream","_openStream","pause","_headerRowCount","reduce","pv","cv","headerCount","headers","count","defn","module","exports"],"mappings":"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","sourcesContent":["const _ = require('../../utils/under-dash');\n\nconst RelType = require('../../xlsx/rel-type');\n\nconst colCache = require('../../utils/col-cache');\nconst Encryptor = require('../../utils/encryptor');\nconst Dimensions = require('../../doc/range');\nconst StringBuf = require('../../utils/string-buf');\n\nconst Row = require('../../doc/row');\nconst Column = require('../../doc/column');\n\nconst SheetRelsWriter = require('./sheet-rels-writer');\nconst SheetCommentsWriter = require('./sheet-comments-writer');\nconst DataValidations = require('../../doc/data-validations');\n\nconst xmlBuffer = new StringBuf();\n\n// ============================================================================================\n// Xforms\nconst ListXform = require('../../xlsx/xform/list-xform');\nconst DataValidationsXform = require('../../xlsx/xform/sheet/data-validations-xform');\nconst SheetPropertiesXform = require('../../xlsx/xform/sheet/sheet-properties-xform');\nconst SheetFormatPropertiesXform = require('../../xlsx/xform/sheet/sheet-format-properties-xform');\nconst ColXform = require('../../xlsx/xform/sheet/col-xform');\nconst RowXform = require('../../xlsx/xform/sheet/row-xform');\nconst HyperlinkXform = require('../../xlsx/xform/sheet/hyperlink-xform');\nconst SheetViewXform = require('../../xlsx/xform/sheet/sheet-view-xform');\nconst SheetProtectionXform = require('../../xlsx/xform/sheet/sheet-protection-xform');\nconst PageMarginsXform = require('../../xlsx/xform/sheet/page-margins-xform');\nconst PageSetupXform = require('../../xlsx/xform/sheet/page-setup-xform');\nconst AutoFilterXform = require('../../xlsx/xform/sheet/auto-filter-xform');\nconst PictureXform = require('../../xlsx/xform/sheet/picture-xform');\nconst ConditionalFormattingsXform = require('../../xlsx/xform/sheet/cf/conditional-formattings-xform');\nconst HeaderFooterXform = require('../../xlsx/xform/sheet/header-footer-xform');\nconst RowBreaksXform = require('../../xlsx/xform/sheet/row-breaks-xform');\n\n// since prepare and render are functional, we can use singletons\nconst xform = {\n  dataValidations: new DataValidationsXform(),\n  sheetProperties: new SheetPropertiesXform(),\n  sheetFormatProperties: new SheetFormatPropertiesXform(),\n  columns: new ListXform({tag: 'cols', length: false, childXform: new ColXform()}),\n  row: new RowXform(),\n  hyperlinks: new ListXform({tag: 'hyperlinks', length: false, childXform: new HyperlinkXform()}),\n  sheetViews: new ListXform({tag: 'sheetViews', length: false, childXform: new SheetViewXform()}),\n  sheetProtection: new SheetProtectionXform(),\n  pageMargins: new PageMarginsXform(),\n  pageSeteup: new PageSetupXform(),\n  autoFilter: new AutoFilterXform(),\n  picture: new PictureXform(),\n  conditionalFormattings: new ConditionalFormattingsXform(),\n  headerFooter: new HeaderFooterXform(),\n  rowBreaks: new RowBreaksXform(),\n};\n\n// ============================================================================================\n\nclass WorksheetWriter {\n  constructor(options) {\n    // in a workbook, each sheet will have a number\n    this.id = options.id;\n\n    // and a name\n    this.name = options.name || `Sheet${this.id}`;\n\n    // add a state\n    this.state = options.state || 'visible';\n\n    // rows are stored here while they need to be worked on.\n    // when they are committed, they will be deleted.\n    this._rows = [];\n\n    // column definitions\n    this._columns = null;\n\n    // column keys (addRow convenience): key ==> this._columns index\n    this._keys = {};\n\n    // keep a record of all row and column pageBreaks\n    this._merges = [];\n    this._merges.add = function() {}; // ignore cell instruction\n\n    // keep record of all hyperlinks\n    this._sheetRelsWriter = new SheetRelsWriter(options);\n\n    this._sheetCommentsWriter = new SheetCommentsWriter(this, this._sheetRelsWriter, options);\n\n    // keep a record of dimensions\n    this._dimensions = new Dimensions();\n\n    // first uncommitted row\n    this._rowZero = 1;\n\n    // committed flag\n    this.committed = false;\n\n    // for data validations\n    this.dataValidations = new DataValidations();\n\n    // for sharing formulae\n    this._formulae = {};\n    this._siFormulae = 0;\n\n    // keep a record of conditionalFormattings\n    this.conditionalFormatting = [];\n\n    // keep a record of all row and column pageBreaks\n    this.rowBreaks = [];\n\n    // for default row height, outline levels, etc\n    this.properties = Object.assign(\n      {},\n      {\n        defaultRowHeight: 15,\n        dyDescent: 55,\n        outlineLevelCol: 0,\n        outlineLevelRow: 0,\n      },\n      options.properties\n    );\n\n    this.headerFooter = Object.assign(\n      {},\n      {\n        differentFirst: false,\n        differentOddEven: false,\n        oddHeader: null,\n        oddFooter: null,\n        evenHeader: null,\n        evenFooter: null,\n        firstHeader: null,\n        firstFooter: null,\n      },\n      options.headerFooter\n    );\n\n    // for all things printing\n    this.pageSetup = Object.assign(\n      {},\n      {\n        margins: {left: 0.7, right: 0.7, top: 0.75, bottom: 0.75, header: 0.3, footer: 0.3},\n        orientation: 'portrait',\n        horizontalDpi: 4294967295,\n        verticalDpi: 4294967295,\n        fitToPage: !!(\n          options.pageSetup &&\n          (options.pageSetup.fitToWidth || options.pageSetup.fitToHeight) &&\n          !options.pageSetup.scale\n        ),\n        pageOrder: 'downThenOver',\n        blackAndWhite: false,\n        draft: false,\n        cellComments: 'None',\n        errors: 'displayed',\n        scale: 100,\n        fitToWidth: 1,\n        fitToHeight: 1,\n        paperSize: undefined,\n        showRowColHeaders: false,\n        showGridLines: false,\n        horizontalCentered: false,\n        verticalCentered: false,\n        rowBreaks: null,\n        colBreaks: null,\n      },\n      options.pageSetup\n    );\n\n    // using shared strings creates a smaller xlsx file but may use more memory\n    this.useSharedStrings = options.useSharedStrings || false;\n\n    this._workbook = options.workbook;\n\n    this.hasComments = false;\n\n    // views\n    this._views = options.views || [];\n\n    // auto filter\n    this.autoFilter = options.autoFilter || null;\n\n    this._media = [];\n\n    // worksheet protection\n    this.sheetProtection = null;\n    \n    // start writing to stream now\n    this._writeOpenWorksheet();\n\n    this.startedData = false;\n  }\n\n  get workbook() {\n    return this._workbook;\n  }\n\n  get stream() {\n    if (!this._stream) {\n      // eslint-disable-next-line no-underscore-dangle\n      this._stream = this._workbook._openStream(`/xl/worksheets/sheet${this.id}.xml`);\n\n      // pause stream to prevent 'data' events\n      this._stream.pause();\n    }\n    return this._stream;\n  }\n\n  // destroy - not a valid operation for a streaming writer\n  // even though some streamers might be able to, it's a bad idea.\n  destroy() {\n    throw new Error('Invalid Operation: destroy');\n  }\n\n  commit() {\n    if (this.committed) {\n      return;\n    }\n    // commit all rows\n    this._rows.forEach(cRow => {\n      if (cRow) {\n        // write the row to the stream\n        this._writeRow(cRow);\n      }\n    });\n\n    // we _cannot_ accept new rows from now on\n    this._rows = null;\n\n    if (!this.startedData) {\n      this._writeOpenSheetData();\n    }\n    this._writeCloseSheetData();\n    this._writeAutoFilter();\n    this._writeMergeCells();\n\n    // for some reason, Excel can't handle dimensions at the bottom of the file\n    // this._writeDimensions();\n\n    this._writeHyperlinks();\n    this._writeConditionalFormatting();\n    this._writeDataValidations();\n    this._writeSheetProtection();\n    this._writePageMargins();\n    this._writePageSetup();\n    this._writeBackground();\n    this._writeHeaderFooter();\n    this._writeRowBreaks();\n\n    // Legacy Data tag for comments\n    this._writeLegacyData();\n\n    this._writeCloseWorksheet();\n    // signal end of stream to workbook\n    this.stream.end();\n\n    this._sheetCommentsWriter.commit();\n    // also commit the hyperlinks if any\n    this._sheetRelsWriter.commit();\n\n    this.committed = true;\n  }\n\n  // return the current dimensions of the writer\n  get dimensions() {\n    return this._dimensions;\n  }\n\n  get views() {\n    return this._views;\n  }\n\n  // =========================================================================\n  // Columns\n\n  // get the current columns array.\n  get columns() {\n    return this._columns;\n  }\n\n  // set the columns from an array of column definitions.\n  // Note: any headers defined will overwrite existing values.\n  set columns(value) {\n    // calculate max header row count\n    this._headerRowCount = value.reduce((pv, cv) => {\n      const headerCount = (cv.header && 1) || (cv.headers && cv.headers.length) || 0;\n      return Math.max(pv, headerCount);\n    }, 0);\n\n    // construct Column objects\n    let count = 1;\n    const columns = (this._columns = []);\n    value.forEach(defn => {\n      const column = new Column(this, count++, false);\n      columns.push(column);\n      column.defn = defn;\n    });\n  }\n\n  getColumnKey(key) {\n    return this._keys[key];\n  }\n\n  setColumnKey(key, value) {\n    this._keys[key] = value;\n  }\n\n  deleteColumnKey(key) {\n    delete this._keys[key];\n  }\n\n  eachColumnKey(f) {\n    _.each(this._keys, f);\n  }\n\n  // get a single column by col number. If it doesn't exist, it and any gaps before it\n  // are created.\n  getColumn(c) {\n    if (typeof c === 'string') {\n      // if it matches a key'd column, return that\n      const col = this._keys[c];\n      if (col) return col;\n\n      // otherwise, assume letter\n      c = colCache.l2n(c);\n    }\n    if (!this._columns) {\n      this._columns = [];\n    }\n    if (c > this._columns.length) {\n      let n = this._columns.length + 1;\n      while (n <= c) {\n        this._columns.push(new Column(this, n++));\n      }\n    }\n    return this._columns[c - 1];\n  }\n\n  // =========================================================================\n  // Rows\n  get _nextRow() {\n    return this._rowZero + this._rows.length;\n  }\n\n  // iterate over every uncommitted row in the worksheet, including maybe empty rows\n  eachRow(options, iteratee) {\n    if (!iteratee) {\n      iteratee = options;\n      options = undefined;\n    }\n    if (options && options.includeEmpty) {\n      const n = this._nextRow;\n      for (let i = this._rowZero; i < n; i++) {\n        iteratee(this.getRow(i), i);\n      }\n    } else {\n      this._rows.forEach(row => {\n        if (row.hasValues) {\n          iteratee(row, row.number);\n        }\n      });\n    }\n  }\n\n  _commitRow(cRow) {\n    // since rows must be written in order, we commit all rows up till and including cRow\n    let found = false;\n    while (this._rows.length && !found) {\n      const row = this._rows.shift();\n      this._rowZero++;\n      if (row) {\n        this._writeRow(row);\n        found = row.number === cRow.number;\n        this._rowZero = row.number + 1;\n      }\n    }\n  }\n\n  get lastRow() {\n    // returns last uncommitted row\n    if (this._rows.length) {\n      return this._rows[this._rows.length - 1];\n    }\n    return undefined;\n  }\n\n  // find a row (if exists) by row number\n  findRow(rowNumber) {\n    const index = rowNumber - this._rowZero;\n    return this._rows[index];\n  }\n\n  getRow(rowNumber) {\n    const index = rowNumber - this._rowZero;\n\n    // may fail if rows have been comitted\n    if (index < 0) {\n      throw new Error('Out of bounds: this row has been committed');\n    }\n    let row = this._rows[index];\n    if (!row) {\n      this._rows[index] = row = new Row(this, rowNumber);\n    }\n    return row;\n  }\n\n  addRow(value) {\n    const row = new Row(this, this._nextRow);\n    this._rows[row.number - this._rowZero] = row;\n    row.values = value;\n    return row;\n  }\n\n  // ================================================================================\n  // Cells\n\n  // returns the cell at [r,c] or address given by r. If not found, return undefined\n  findCell(r, c) {\n    const address = colCache.getAddress(r, c);\n    const row = this.findRow(address.row);\n    return row ? row.findCell(address.column) : undefined;\n  }\n\n  // return the cell at [r,c] or address given by r. If not found, create a new one.\n  getCell(r, c) {\n    const address = colCache.getAddress(r, c);\n    const row = this.getRow(address.row);\n    return row.getCellEx(address);\n  }\n\n  mergeCells(...cells) {\n    // may fail if rows have been comitted\n    const dimensions = new Dimensions(cells);\n\n    // check cells aren't already merged\n    this._merges.forEach(merge => {\n      if (merge.intersects(dimensions)) {\n        throw new Error('Cannot merge already merged cells');\n      }\n    });\n\n    // apply merge\n    const master = this.getCell(dimensions.top, dimensions.left);\n    for (let i = dimensions.top; i <= dimensions.bottom; i++) {\n      for (let j = dimensions.left; j <= dimensions.right; j++) {\n        if (i > dimensions.top || j > dimensions.left) {\n          this.getCell(i, j).merge(master);\n        }\n      }\n    }\n\n    // index merge\n    this._merges.push(dimensions);\n  }\n\n  // ===========================================================================\n  // Conditional Formatting\n  addConditionalFormatting(cf) {\n    this.conditionalFormatting.push(cf);\n  }\n\n  removeConditionalFormatting(filter) {\n    if (typeof filter === 'number') {\n      this.conditionalFormatting.splice(filter, 1);\n    } else if (filter instanceof Function) {\n      this.conditionalFormatting = this.conditionalFormatting.filter(filter);\n    } else {\n      this.conditionalFormatting = [];\n    }\n  }\n\n  // =========================================================================\n\n  addBackgroundImage(imageId) {\n    this._background = {\n      imageId,\n    };\n  }\n\n  getBackgroundImageId() {\n    return this._background && this._background.imageId;\n  }\n\n  // =========================================================================\n  // Worksheet Protection\n  protect(password, options) {\n    // TODO: make this function truly async\n    // perhaps marshal to worker thread or something\n    return new Promise(resolve => {\n      this.sheetProtection = {\n        sheet: true,\n      };\n      if (options && 'spinCount' in options) {\n        // force spinCount to be integer >= 0\n        options.spinCount = isFinite(options.spinCount) ? Math.round(Math.max(0, options.spinCount)) : 100000;\n      }\n      if (password) {\n        this.sheetProtection.algorithmName = 'SHA-512';\n        this.sheetProtection.saltValue = Encryptor.randomBytes(16).toString('base64');\n        this.sheetProtection.spinCount = options && 'spinCount' in options ? options.spinCount : 100000; // allow user specified spinCount\n        this.sheetProtection.hashValue = Encryptor.convertPasswordToHash(password, 'SHA512', this.sheetProtection.saltValue, this.sheetProtection.spinCount);\n      }\n      if (options) {\n        this.sheetProtection = Object.assign(this.sheetProtection, options);\n        if (!password && 'spinCount' in options) {\n          delete this.sheetProtection.spinCount;\n        }\n      }\n      resolve();\n    });\n  }\n\n  unprotect() {\n    this.sheetProtection = null;\n  }\n  \n  // ================================================================================\n\n  _write(text) {\n    xmlBuffer.reset();\n    xmlBuffer.addText(text);\n    this.stream.write(xmlBuffer);\n  }\n\n  _writeSheetProperties(xmlBuf, properties, pageSetup) {\n    const sheetPropertiesModel = {\n      outlineProperties: properties && properties.outlineProperties,\n      tabColor: properties && properties.tabColor,\n      pageSetup:\n        pageSetup && pageSetup.fitToPage\n          ? {\n              fitToPage: pageSetup.fitToPage,\n            }\n          : undefined,\n    };\n\n    xmlBuf.addText(xform.sheetProperties.toXml(sheetPropertiesModel));\n  }\n\n  _writeSheetFormatProperties(xmlBuf, properties) {\n    const sheetFormatPropertiesModel = properties\n      ? {\n          defaultRowHeight: properties.defaultRowHeight,\n          dyDescent: properties.dyDescent,\n          outlineLevelCol: properties.outlineLevelCol,\n          outlineLevelRow: properties.outlineLevelRow,\n        }\n      : undefined;\n    if (properties.defaultColWidth) {\n      sheetFormatPropertiesModel.defaultColWidth = properties.defaultColWidth;\n    }\n\n    xmlBuf.addText(xform.sheetFormatProperties.toXml(sheetFormatPropertiesModel));\n  }\n\n  _writeOpenWorksheet() {\n    xmlBuffer.reset();\n\n    xmlBuffer.addText('<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>');\n    xmlBuffer.addText(\n      '<worksheet xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\"' +\n        ' xmlns:r=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\"' +\n        ' xmlns:mc=\"http://schemas.openxmlformats.org/markup-compatibility/2006\"' +\n        ' mc:Ignorable=\"x14ac\"' +\n        ' xmlns:x14ac=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac\">'\n    );\n\n    this._writeSheetProperties(xmlBuffer, this.properties, this.pageSetup);\n\n    xmlBuffer.addText(xform.sheetViews.toXml(this.views));\n\n    this._writeSheetFormatProperties(xmlBuffer, this.properties);\n\n    this.stream.write(xmlBuffer);\n  }\n\n  _writeColumns() {\n    const cols = Column.toModel(this.columns);\n    if (cols) {\n      xform.columns.prepare(cols, {styles: this._workbook.styles});\n      this.stream.write(xform.columns.toXml(cols));\n    }\n  }\n\n  _writeOpenSheetData() {\n    this._write('<sheetData>');\n  }\n\n  _writeRow(row) {\n    if (!this.startedData) {\n      this._writeColumns();\n      this._writeOpenSheetData();\n      this.startedData = true;\n    }\n\n    if (row.hasValues || row.height) {\n      const {model} = row;\n      const options = {\n        styles: this._workbook.styles,\n        sharedStrings: this.useSharedStrings ? this._workbook.sharedStrings : undefined,\n        hyperlinks: this._sheetRelsWriter.hyperlinksProxy,\n        merges: this._merges,\n        formulae: this._formulae,\n        siFormulae: this._siFormulae,\n        comments: [],\n      };\n      xform.row.prepare(model, options);\n      this.stream.write(xform.row.toXml(model));\n\n      if (options.comments.length) {\n        this.hasComments = true;\n        this._sheetCommentsWriter.addComments(options.comments);\n      }\n    }\n  }\n\n  _writeCloseSheetData() {\n    this._write('</sheetData>');\n  }\n\n  _writeMergeCells() {\n    if (this._merges.length) {\n      xmlBuffer.reset();\n      xmlBuffer.addText(`<mergeCells count=\"${this._merges.length}\">`);\n      this._merges.forEach(merge => {\n        xmlBuffer.addText(`<mergeCell ref=\"${merge}\"/>`);\n      });\n      xmlBuffer.addText('</mergeCells>');\n\n      this.stream.write(xmlBuffer);\n    }\n  }\n\n  _writeHyperlinks() {\n    // eslint-disable-next-line no-underscore-dangle\n    this.stream.write(xform.hyperlinks.toXml(this._sheetRelsWriter._hyperlinks));\n  }\n\n  _writeConditionalFormatting() {\n    const options = {\n      styles: this._workbook.styles,\n    };\n    xform.conditionalFormattings.prepare(this.conditionalFormatting, options);\n    this.stream.write(xform.conditionalFormattings.toXml(this.conditionalFormatting));\n  }\n\n  _writeRowBreaks() {\n    this.stream.write(xform.rowBreaks.toXml(this.rowBreaks));\n  }\n\n  _writeDataValidations() {\n    this.stream.write(xform.dataValidations.toXml(this.dataValidations.model));\n  }\n\n  _writeSheetProtection() {\n    this.stream.write(xform.sheetProtection.toXml(this.sheetProtection));\n  }\n\n  _writePageMargins() {\n    this.stream.write(xform.pageMargins.toXml(this.pageSetup.margins));\n  }\n\n  _writePageSetup() {\n    this.stream.write(xform.pageSeteup.toXml(this.pageSetup));\n  }\n\n  _writeHeaderFooter() {\n    this.stream.write(xform.headerFooter.toXml(this.headerFooter));\n  }\n\n  _writeAutoFilter() {\n    this.stream.write(xform.autoFilter.toXml(this.autoFilter));\n  }\n\n  _writeBackground() {\n    if (this._background) {\n      if (this._background.imageId !== undefined) {\n        const image = this._workbook.getImage(this._background.imageId);\n        const pictureId = this._sheetRelsWriter.addMedia({\n          Target: `../media/${image.name}`,\n          Type: RelType.Image,\n        });\n\n        this._background = {\n          ...this._background,\n          rId: pictureId,\n        };\n      }\n      this.stream.write(xform.picture.toXml({rId: this._background.rId}));\n    }\n  }\n\n  _writeLegacyData() {\n    if (this.hasComments) {\n      xmlBuffer.reset();\n      xmlBuffer.addText(`<legacyDrawing r:id=\"${this._sheetCommentsWriter.vmlRelId}\"/>`);\n      this.stream.write(xmlBuffer);\n    }\n  }\n\n  _writeDimensions() {\n    // for some reason, Excel can't handle dimensions at the bottom of the file\n    // and we don't know the dimensions until the commit, so don't write them.\n    // this._write('<dimension ref=\"' + this._dimensions + '\"/>');\n  }\n\n  _writeCloseWorksheet() {\n    this._write('</worksheet>');\n  }\n}\n\nmodule.exports = WorksheetWriter;\n"],"file":"worksheet-writer.js"}